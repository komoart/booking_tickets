version: '3.8'

services:
  nginx:
    container_name: nginx
    image: nginx:1.23
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/configs:/etc/nginx/conf.d:ro
    ports:
      - "8080:8080"
      - "8084:8084"
    restart: always

  postgres:
    container_name: postgres
    image: postgres:15.2-alpine3.17
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - .env
    healthcheck:
      test: [ "CMD-SHELL", "su postgres", "&&", "pg_isready" ]
      interval: 5s
      timeout: 5s
      retries: 10

  redis:
    container_name: redis
    image: redis:7.0.4-alpine
    restart: always
    expose:
      - 6379
    volumes:
      - cache:/data
    healthcheck:
      test: redis-cli ping

  auth_api:
    container_name: auth_api
    build:
      context: services/auth
      dockerfile: Dockerfile
    restart: always
    env_file:
      - .env

  ugc_api:
    container_name: ugc_api
    build:
      context: services/ugc
      dockerfile: Dockerfile
    restart: always
    env_file:
      - .env

  movie_api:
    container_name: movie_api
    build:
      context: services/movies
      dockerfile: Dockerfile
    restart: always
    env_file:
      - .env


volumes:
  postgres_data:
  cache:
