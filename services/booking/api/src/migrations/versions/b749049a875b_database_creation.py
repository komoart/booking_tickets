"""database creation

Revision ID: b749049a875b
Revises: 
Create Date: 2023-05-28 10:17:02.725476

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'b749049a875b'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('announcements',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('status', sa.Enum('Created', 'Alive', 'Closed', 'Done', name='eventstatus'), nullable=True),
    sa.Column('title', sa.String(length=256), nullable=True),
    sa.Column('description', sa.String(length=4096), nullable=True),
    sa.Column('movie_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('author_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('sub_only', sa.Boolean(), server_default='t', nullable=True),
    sa.Column('is_free', sa.Boolean(), server_default='t', nullable=True),
    sa.Column('tickets_count', sa.Integer(), nullable=True),
    sa.Column('event_time', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('event_location', sa.String(length=4096), nullable=True),
    sa.Column('created', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('modified', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('duration', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('author_id', 'event_time', name='_author_event_time'),
    sa.UniqueConstraint('event_time')
    )
    op.create_index(op.f('ix_announcements_author_id'), 'announcements', ['author_id'], unique=False)
    op.create_index(op.f('ix_announcements_id'), 'announcements', ['id'], unique=False)
    op.create_index(op.f('ix_announcements_movie_id'), 'announcements', ['movie_id'], unique=False)
    op.create_table('booking',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('announcement_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('movie_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('author_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('guest_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('author_status', sa.Boolean(), nullable=True),
    sa.Column('guest_status', sa.Boolean(), server_default='t', nullable=True),
    sa.Column('event_time', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('created', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('modified', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['announcement_id'], ['announcements.id'], ondelete='cascade'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('guest_id', 'event_time', name='_bk_guest_event_time')
    )
    op.create_index(op.f('ix_booking_author_id'), 'booking', ['author_id'], unique=False)
    op.create_index(op.f('ix_booking_guest_id'), 'booking', ['guest_id'], unique=False)
    op.create_index(op.f('ix_booking_id'), 'booking', ['id'], unique=False)
    op.create_index(op.f('ix_booking_movie_id'), 'booking', ['movie_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_booking_movie_id'), table_name='booking')
    op.drop_index(op.f('ix_booking_id'), table_name='booking')
    op.drop_index(op.f('ix_booking_guest_id'), table_name='booking')
    op.drop_index(op.f('ix_booking_author_id'), table_name='booking')
    op.drop_table('booking')
    op.drop_index(op.f('ix_announcements_movie_id'), table_name='announcements')
    op.drop_index(op.f('ix_announcements_id'), table_name='announcements')
    op.drop_index(op.f('ix_announcements_author_id'), table_name='announcements')
    op.drop_table('announcements')
    # ### end Alembic commands ###
